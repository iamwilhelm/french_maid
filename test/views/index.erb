<html>
  <head>
    <title>French Maid's manual testing and examples</title>
    <script src="jquery-1.3.2.min.js" type="text/javascript"></script>
    <style>
      h1, h2, h3, h4, h5 { margin: 0px 0px 10px 0px; }
      .section { 
        min-height: 50px;
        border-left: 5px solid #999;
        padding: 10px;
        margin: 20px 5px;
      }
      body {
        font-family: Helvetica, Sans-serif;
        font-size: 14px;
        /* http://nz13590.deviantart.com/art/Sry-for-Fu-Chan-102084543 */
        background-image: url('meido-sketch.jpg');
        background-position: top right;
        background-repeat: no-repeat;
        background-attachment: fixed;
        padding-top: 30px;
      }
      .hidden {
        display: none;
      }
    </style>
  </head>
  <body>
    <h2>Polishing links</h2>
      
    <div class="section">
      <h3>Remote GET request that returns HTML (<a href="http://microformats.org/wiki/rest/ahah">AHAH microformat</a>)</h3>
      <a href="/french_women" data-remote="true" data-update="french_women_list">
        A list of famous french women</a>
      <p id="french_women_list">
      </p>
      <a href="" data-remote="false" data-update="remote_get_docs">docs</a>
      <div id="remote_get_docs" class="hidden">
        <p>
          To create a remote GET request link, add a <i>data-remote='true'</i> 
          attribute to any link.
        </p>
        It has a couple attributes it uses:
        <ul>
          <li>href - The URL where to make the AJAX request</li>
          <li>data-update - the id of the DOM elem to put the result</li>
        </ul>
        <p>
          Note that it requires the server to return html
        </p>
      </div>
    </div>

    <div class="section">
      <h3>Remote GET request that returns data as JSON</h3>
      <script type="text/javascript">
        $(document).ready(function() {
          calcAverage = function(data, textStatus) {
            var total = 0, number = 0, average = 0;
            for (key in data) {
               total += data[key];
               number += 1;
            };
            average = (number == 0) ? 0.0 : (total / number);

            $("#french_heights").html(
              "Called calcAverage() and used json data passed as parameter" + "<br/>" + 
              "JSON data:" + data.valueOf() + "<br/>" + 
              "The average height is: " + average + "<br/>");
          };
        });
      </script>
      <a href="/heights" data-remote="true" data-update-success="calcAverage">
        A list of heights of random french women</a>
      <p id="french_heights">
      </p>
      <a href="" data-remote="false" data-update="remote_get_function_docs">docs</a>
      <div id="remote_get_function_docs" class="hidden">
        <p>
          When you want to process json data returned by the server, make sure 
          <i>data-remote="true"</i> as usual, but this time, <i>data-update-success</i>
          is the *NAME* of the javascript callback function that needs to execute in order to process
          the JSON data returned from the server.
        </p>
        <ul>
          <li>data-remote - <b>true</b>.  It has to be set to true for this to work.
          <li>data-update-success: The function name of attribute to execute upon AJAX request.  
            You can either name a function at the global level, or an object's method.
          </li>
          <li>data-update-failure: Not yet implemented</li>
        </ul>
      </div>
    </div>

    <div class="section">
      <h3>Non-remote links to toggle sections</h3>
      <a href="" data-remote="false" data-update="vacuums_list">
        A list of vacuums
      </a>
      <ul id="vacuums_list" class="hidden">
        <li>Dyson</li>
        <li>Hoover</li>
        <li>Swiffer</li>
      </ul>
      <p/>
      <a href="" data-remote="false" data-update="no_remote_toggle_docs">docs</a>
      <div id="no_remote_toggle_docs" class="hidden">
        With the data-remote attribute set to false, by simply putting in the 
        data-update field makes the DOM element it's pointing to toggle on and off.
        Make sure that the href attribute is present, but empty.
      </div>
    </div>

    <h2>Polishing forms</h2>
    
    <div class="section">
      <h3>Remote POST form submit</h3>
      <p>
        Submit a french food
      </p>
      <form action="create" method="post" data-remote="true" 
            data-update="new_french_food">
        <input type="text_field" name="food[name]" />
        <input type="submit" name="submit[create]" value="Create" />
      </form>
      <p id="new_french_food">
      </p>
      <a href="" data-remote="false" data-update="remote_get_doc">docs</a>
      <div id="remote_get_doc" class="hidden">
        The form needs a couple attributes:
        <ul>
          <li>data-remote - needs to be set to true</li>
          <li>action - The URL to submit the AJAX request</li>
          <li>method - The method in which to submit</li>
          <li>data-update - the id of html element to put results</li>
        </ul>
      </div>
    </div>
    
    <p>
      Manual test, documentation, and demo of <a href="http://github.com/iamwilhelm/french_maid">French maid</a>
    </p>
    <script src="french_maid.js" type="text/javascript"></script>

  </body>
</html>
